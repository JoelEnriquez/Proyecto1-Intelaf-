/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIConsultas;

import ConexionSQL.ConsultasTienda;
import GUIEmpleado.TiendaFrame;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joel
 */
public class ListadoTiendas extends javax.swing.JDialog {

    private ConsultasTienda consultasT;
    private Connection conexion;
    private DefaultTableModel dtModel;
    private ArrayList<String[]> tablaTienda = new ArrayList<>();

    /**
     * Creates new form ListadoTiendas
     *
     * @param tiendaF
     * @param modal
     * @param conexion
     */
    public ListadoTiendas(TiendaFrame tiendaF, boolean modal, Connection conexion) {
        super(tiendaF, modal);
        initComponents();
        this.conexion = conexion;
        consultasT = new ConsultasTienda();
        desactivarComponentes();
        construirTabla();
    }

    private void desactivarComponentes() {
        nombreRb.setVisible(false);
        codigoRb.setVisible(false);

        nombreTiendaTF.setEnabled(false);
        nombreTiendaTF.setVisible(false);
        codigoTiendaTF.setEnabled(false);
        codigoTiendaTF.setVisible(false);
    }

    private void visualizarComponentesFiltro() {
        nombreRb.setVisible(true);
        codigoRb.setVisible(true);

        nombreTiendaTF.setVisible(true);
        codigoTiendaTF.setVisible(true);
    }

    private void ocultarComponentes() {
        nombreRb.setVisible(false);
        codigoRb.setVisible(false);

        nombreTiendaTF.setVisible(false);
        codigoTiendaTF.setVisible(false);
    }

    private void construirTabla() {
        dtModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        dtModel.addColumn("Codigo");
        dtModel.addColumn("Nombre");
        dtModel.addColumn("Direccion");
        dtModel.addColumn("Telefono 1");
        dtModel.addColumn("Telefono 2");
        dtModel.addColumn("Horario");
        dtModel.addColumn("Correo Electronico");

        infoTiendasTable.setModel(dtModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filtrobg = new javax.swing.ButtonGroup();
        scrollTabla = new javax.swing.JScrollPane();
        infoTiendasTable = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        todasTiendasRb = new javax.swing.JRadioButton();
        codigoRb = new javax.swing.JRadioButton();
        filtradaRb = new javax.swing.JRadioButton();
        nombreRb = new javax.swing.JRadioButton();
        nombreTiendaTF = new javax.swing.JTextField();
        codigoTiendaTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        infoTiendasTable.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        infoTiendasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollTabla.setViewportView(infoTiendasTable);

        getContentPane().add(scrollTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 710, 470));

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cerrar (1).png"))); // NOI18N
        closeButton.setContentAreaFilled(false);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 0, 90, 90));

        filtrobg.add(todasTiendasRb);
        todasTiendasRb.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        todasTiendasRb.setText("Todas las tiendas");
        todasTiendasRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todasTiendasRbActionPerformed(evt);
            }
        });
        getContentPane().add(todasTiendasRb, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        codigoRb.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        codigoRb.setText("Codigo");
        codigoRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoRbActionPerformed(evt);
            }
        });
        getContentPane().add(codigoRb, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 110, -1));

        filtrobg.add(filtradaRb);
        filtradaRb.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        filtradaRb.setText("Filtrada");
        filtradaRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtradaRbActionPerformed(evt);
            }
        });
        getContentPane().add(filtradaRb, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        nombreRb.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        nombreRb.setText("Nombre");
        nombreRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreRbActionPerformed(evt);
            }
        });
        getContentPane().add(nombreRb, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 130, -1));

        nombreTiendaTF.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        getContentPane().add(nombreTiendaTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 130, 40));

        codigoTiendaTF.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        getContentPane().add(codigoTiendaTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 150, 40));

        jButton1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 200, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoRbActionPerformed
        if (codigoRb.isSelected()) {
            codigoTiendaTF.setEnabled(true);
        } else {
            codigoTiendaTF.setEnabled(false);
        }
    }//GEN-LAST:event_codigoRbActionPerformed

    private void filtradaRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtradaRbActionPerformed
        if (filtradaRb.isSelected()) {
            visualizarComponentesFiltro();
        }
    }//GEN-LAST:event_filtradaRbActionPerformed

    private void todasTiendasRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todasTiendasRbActionPerformed
        if (todasTiendasRb.isSelected()) {
            ocultarComponentes();
        }
    }//GEN-LAST:event_todasTiendasRbActionPerformed

    private void nombreRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreRbActionPerformed
        if (nombreRb.isSelected()) {
            nombreTiendaTF.setEnabled(true);
        } else {
            nombreTiendaTF.setEnabled(false);
        }

    }//GEN-LAST:event_nombreRbActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (todasTiendasRb.isSelected()) {
            tablaTienda = consultasT.obtenerTodasLasTiendas(conexion, tablaTienda);
            mostrarInfoEnTabla();
        } else if (filtradaRb.isSelected()) {
            if (nombreRb.isSelected() && codigoRb.isSelected() == false) {
                if (nombreTiendaTF.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Ingrese algun nombre para filtrar", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    tablaTienda = consultasT.obtenerPorNombre(conexion, tablaTienda, nombreTiendaTF.getText().trim());
                    mostrarInfoEnTabla();
                }
            } else if (nombreRb.isSelected() == false && codigoRb.isSelected()) {
                if (codigoTiendaTF.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Ingrese algun codigo para filtrar", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    tablaTienda = consultasT.obtenerPorCodigo(conexion, tablaTienda, codigoTiendaTF.getText().trim());
                    mostrarInfoEnTabla();
                }
            } else if (nombreRb.isSelected() && codigoRb.isSelected()) {
                if (codigoTiendaTF.getText().trim().isEmpty() || nombreTiendaTF.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Ingrese algun codigo para filtrar", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    tablaTienda = consultasT.obtenerPorAmbosFiltros(conexion, tablaTienda,
                            codigoTiendaTF.getText().trim(), nombreTiendaTF.getText().trim());
                    mostrarInfoEnTabla();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese alguno de los filtrados", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione algun tipo de filtrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Luego de terminar una buscada se muestra en la tabla la info
     */
    private void mostrarInfoEnTabla() {
        construirTabla();

        for (int i = 0; i < tablaTienda.size(); i++) {
            dtModel.addRow(tablaTienda.get(i));
        }

        infoTiendasTable.setModel(dtModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton codigoRb;
    private javax.swing.JTextField codigoTiendaTF;
    private javax.swing.JRadioButton filtradaRb;
    private javax.swing.ButtonGroup filtrobg;
    private javax.swing.JTable infoTiendasTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JRadioButton nombreRb;
    private javax.swing.JTextField nombreTiendaTF;
    private javax.swing.JScrollPane scrollTabla;
    private javax.swing.JRadioButton todasTiendasRb;
    // End of variables declaration//GEN-END:variables
}
